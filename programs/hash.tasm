.data
str_heading:
    %string "hashes are cool üëç"

str_input:
    %string "abcd"

str_hash:
    %string "hash:\t"

str_tryte:
    %string "tryte:\t"

str_hash_prime:
    %string "hash':\t"

str_line:
    %string "------------------------\n"

str_newline:
    %string "\n"

.code
printString:
    movi $t0, 0 ; PrintString
    syscall
    ret

printTernary:
    movi $t0, 2 ; PrintTernary
    syscall
    ret

getRand:
    movi $t0, 3 ; GetRand
    syscall
    ret

__start:
    mova $a0, str_heading
    call printString

    mova $a0, str_newline
    call printString

    call getRand

    ; hash
    mov $s3, $a0
    ; movi $s3, 0

    ; base address
    mova $s2, str_input

    ; index
    movi $s0, 0

    ; length
    lw $s1, $s2, 0

loop:
    cmp $t0, $s0, $s1
    j01 $t0, end

    mova $a0, str_line
    call printString

    mova $a0, str_hash
    call printString

    mov $a0, $s3
    call printTernary
    mova $a0, str_newline
    call printString

    mova $a0, str_tryte
    call printString

    muli $s0, 6
    add $t0, $s2, $lo
    addi $t0, 24
    lt $a1, $t0, 0

    mov $a0, $a1
    call printTernary
    mova $a0, str_newline
    call printString

    muli $s3, 263
    or $s3, $lo, $hi
    add $s3, $s3, $a1

    mova $a0, str_hash_prime
    call printString

    mov $a0, $s3
    call printTernary
    mova $a0, str_newline
    call printString

    addi $s0, 1
    jmp loop

end:
    halt
